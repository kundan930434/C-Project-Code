extern "C" void kernel_main() {
    char* video_memory = (char*)0xB8000;
    
    // Display a simple message
    const char* message = "Hello from Custom Kernel!";
    for (int i = 0; message[i] != '\0'; i++) {
        video_memory[i * 2] = message[i];      // Character
        video_memory[i * 2 + 1] = 0x07;       // Color attribute (white on black)
    }
    
    // Loop forever
    while (1) {
        __asm__("hlt"); // Halt CPU until next interrupt to save power
    }
}

// Define entry point (multiboot-compliant bootloader like GRUB will call this)
extern "C" void _start() {
    kernel_main();
}
